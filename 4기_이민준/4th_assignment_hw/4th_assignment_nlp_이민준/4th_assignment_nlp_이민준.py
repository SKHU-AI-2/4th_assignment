# -*- coding: utf-8 -*-
"""4th_assignment_NLP - 이민준.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mHn4NCVRo1zs93TCSkQ4G-A0MUjxTbHx

202014068_이민준
"""

import pandas as pd
import re

positive_words = ['좋다', '기분', '행복하다', '맛있는', '즐겁다', '사랑해', '감사', '멋지다', '예쁘다']
negative_words = ['싫다', '별로', '지루했다', '실망했다', '어렵다', '짜증나', '화났다', '우울하다', '못생겼다']

class Aurora3:
    def __init__(self):
        self.pos_dict = set(positive_words)
        self.neg_dict = set(negative_words)

    def tokenize(self, sentence):
        return re.findall(r'\b\w+\b', sentence)

    def analyze(self, sentence):
        tokens = self.tokenize(sentence)
        pos_count = sum(1 for token in tokens if token in self.pos_dict)
        neg_count = sum(1 for token in tokens if token in self.neg_dict)
        total = pos_count + neg_count

        score = (pos_count - neg_count) / total if total != 0 else 0
        ratio = total / len(tokens) if tokens else 0

        return score, ratio

    def get_df(self, df):
        scores, ratios = [], []
        for sentence in df['sentence']:
            score, ratio = self.analyze(sentence)
            scores.append(score)
            ratios.append(ratio)
        df['score'] = scores
        df['ratio'] = ratios
        return df

df = pd.read_csv('text_data_1.txt', header=None, names=['sentence'])

analyzer = Aurora3()
df = analyzer.get_df(df)

print(df)